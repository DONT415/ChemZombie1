#include <iostream>
#include <vector>
using namespace std;

bool allDivisors(vector<int>& arr1, int num) {
    for (int divisor : arr1) {
        if (num % divisor != 0) {
            return false;
        }
    }
    return true;
}

// Function to check if num is divisor of all elements in arr2
bool isCommonDivisor(vector<int>& arr2, int num) {
    for (int element : arr2) {
        if (element % num != 0) {
            return false;
        }
    }
    return true;
}

int main() {
    int n, m;
    cin >> n >> m;
    
    vector<int> arr1(n);
    vector<int> arr2(m);
    
    // Read array 1
    for (int i = 0; i < n; ++i) {
        cin >> arr1[i];
    }
    
    // Read array 2
    for (int i = 0; i < m; ++i) {
        cin >> arr2[i];
    }
    
    // Find integers that satisfy both conditions
    int count = 0;
    for (int x = 1; x <= 100; ++x) { // Limit based on problem constraint
        if (allDivisors(arr1, x) && isCommonDivisor(arr2, x)) {
            count++;
        }
    }
    
    // Output the number of integers satisfying the conditions
    cout << count << endl;
    
    return 0;
}
